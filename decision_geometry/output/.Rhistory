axis.line.y = element_line(color="black", size = 0.5))
}
ggplot(df, aes(x = x, y = y)) + annotate('rect', xmin=-180, xmax=-zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=zeros[zero_idx], xmax=180, ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=-zeros[zero_idx], xmax=zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ec6f31') +
geom_point(size = 0.5) + scale_x_continuous(breaks = c(-180, -120, -60, 0, 60, 120, 180)) +
xlab(bquote('Angle subtended by targets on the agent (' *theta* ')')) + ylab(bquote('Neural interaction strength (' ~J[ij]~ ')')) +
ylim(-1.25,1.25) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_vline(xintercept = 0, lty = 'dashed') + theme_cus()
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
library(RColorBrewer)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 15),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
theme_blank <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_blank()
)
# Parameter
curve <- 'cos'    # can take values cos, nu or hat
x <- seq(-pi, pi, 0.001)
ycos <- cos(x)
ynu <- cos(pi*(abs(x)/pi)^0.54)
yhat <- 1.8 * (1-0.25*x*x) * exp(-0.25*x*x) - 1
zeros <- c(90, 49.85, 59.7)
x <- x*180/pi
df <- as.data.frame(cbind(x,ycos, ynu, yhat))
if (curve == 'cos') {
zero_idx <- 1
df$y <- df$ycos
} else if (curve == 'nu') {
zero_idx <- 2
df$y <- df$ynu
} else {
zero_idx <- 3
df$y <- df$yhat
}
ggplot(df, aes(x = x, y = y)) + annotate('rect', xmin=-180, xmax=-zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=zeros[zero_idx], xmax=180, ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=-zeros[zero_idx], xmax=zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ec6f31') +
geom_point(size = 0.5) + scale_x_continuous(breaks = c(-180, -120, -60, 0, 60, 120, 180)) +
xlab(bquote('Angle subtended by targets on the agent (' *theta* ')')) + ylab(bquote('Neural interaction strength (' ~J[ij]~ ')')) +
ylim(-1.25,1.25) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_vline(xintercept = 0, lty = 'dashed') + theme_cus()
ggsave(paste0('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/tuning_curve_', curve, '.png'),
width = 8, height = 4, dpi = 300)
df_pie <- data.frame(
action = c('activate', 'inhibit'),
angle = c(zeros[zero_idx]/180, 1-zeros[zero_idx]/180)
)
ggplot(df_pie, aes(x="", y=angle, fill=action)) + geom_bar(width = 1, stat = 'identity', alpha = 0.8) +
coord_polar('y', start = 0) + scale_fill_manual(values=c("#ec6f31", "#ac9c93")) +
guides(fill = FALSE) + theme_blank
ggsave(paste0('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/tuning_illustration_', curve, '.png'),
width = 8, height = 4, dpi = 300)
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
library(RColorBrewer)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 15),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
theme_blank <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_blank()
)
# Parameter
curve <- 'nu'    # can take values cos, nu or hat
x <- seq(-pi, pi, 0.001)
ycos <- cos(x)
ynu <- cos(pi*(abs(x)/pi)^0.54)
yhat <- 1.8 * (1-0.25*x*x) * exp(-0.25*x*x) - 1
zeros <- c(90, 49.85, 59.7)
x <- x*180/pi
df <- as.data.frame(cbind(x,ycos, ynu, yhat))
if (curve == 'cos') {
zero_idx <- 1
df$y <- df$ycos
} else if (curve == 'nu') {
zero_idx <- 2
df$y <- df$ynu
} else {
zero_idx <- 3
df$y <- df$yhat
}
ggplot(df, aes(x = x, y = y)) + annotate('rect', xmin=-180, xmax=-zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=zeros[zero_idx], xmax=180, ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=-zeros[zero_idx], xmax=zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ec6f31') +
geom_point(size = 0.5) + scale_x_continuous(breaks = c(-180, -120, -60, 0, 60, 120, 180)) +
xlab(bquote('Angle subtended by targets on the agent (' *theta* ')')) + ylab(bquote('Neural interaction strength (' ~J[ij]~ ')')) +
ylim(-1.25,1.25) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_vline(xintercept = 0, lty = 'dashed') + theme_cus()
ggsave(paste0('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/tuning_curve_', curve, '.png'),
width = 8, height = 4, dpi = 300)
df_pie <- data.frame(
action = c('activate', 'inhibit'),
angle = c(zeros[zero_idx]/180, 1-zeros[zero_idx]/180)
)
ggplot(df_pie, aes(x="", y=angle, fill=action)) + geom_bar(width = 1, stat = 'identity', alpha = 0.8) +
coord_polar('y', start = 0) + scale_fill_manual(values=c("#ec6f31", "#ac9c93")) +
guides(fill = FALSE) + theme_blank
ggsave(paste0('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/tuning_illustration_', curve, '.png'),
width = 8, height = 4, dpi = 300)
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
library(RColorBrewer)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 15),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
theme_blank <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_blank()
)
# Parameter
curve <- 'hat'    # can take values cos, nu or hat
x <- seq(-pi, pi, 0.001)
ycos <- cos(x)
ynu <- cos(pi*(abs(x)/pi)^0.54)
yhat <- 1.8 * (1-0.25*x*x) * exp(-0.25*x*x) - 1
zeros <- c(90, 49.85, 59.7)
x <- x*180/pi
df <- as.data.frame(cbind(x,ycos, ynu, yhat))
if (curve == 'cos') {
zero_idx <- 1
df$y <- df$ycos
} else if (curve == 'nu') {
zero_idx <- 2
df$y <- df$ynu
} else {
zero_idx <- 3
df$y <- df$yhat
}
ggplot(df, aes(x = x, y = y)) + annotate('rect', xmin=-180, xmax=-zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=zeros[zero_idx], xmax=180, ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=-zeros[zero_idx], xmax=zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ec6f31') +
geom_point(size = 0.5) + scale_x_continuous(breaks = c(-180, -120, -60, 0, 60, 120, 180)) +
xlab(bquote('Angle subtended by targets on the agent (' *theta* ')')) + ylab(bquote('Neural interaction strength (' ~J[ij]~ ')')) +
ylim(-1.25,1.25) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_vline(xintercept = 0, lty = 'dashed') + theme_cus()
ggsave(paste0('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/tuning_curve_', curve, '.png'),
width = 8, height = 4, dpi = 300)
df_pie <- data.frame(
action = c('activate', 'inhibit'),
angle = c(zeros[zero_idx]/180, 1-zeros[zero_idx]/180)
)
ggplot(df_pie, aes(x="", y=angle, fill=action)) + geom_bar(width = 1, stat = 'identity', alpha = 0.8) +
coord_polar('y', start = 0) + scale_fill_manual(values=c("#ec6f31", "#ac9c93")) +
guides(fill = FALSE) + theme_blank
ggsave(paste0('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/tuning_illustration_', curve, '.png'),
width = 8, height = 4, dpi = 300)
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
library(RColorBrewer)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 18),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
theme_blank <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_blank()
)
# Parameter
curve <- 'hat'    # can take values cos, nu or hat
x <- seq(-pi, pi, 0.001)
ycos <- cos(x)
ynu <- cos(pi*(abs(x)/pi)^0.54)
yhat <- 1.8 * (1-0.25*x*x) * exp(-0.25*x*x) - 1
zeros <- c(90, 49.85, 59.7)
x <- x*180/pi
df <- as.data.frame(cbind(x,ycos, ynu, yhat))
if (curve == 'cos') {
zero_idx <- 1
df$y <- df$ycos
} else if (curve == 'nu') {
zero_idx <- 2
df$y <- df$ynu
} else {
zero_idx <- 3
df$y <- df$yhat
}
ggplot(df, aes(x = x, y = y)) + annotate('rect', xmin=-180, xmax=-zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=zeros[zero_idx], xmax=180, ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=-zeros[zero_idx], xmax=zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ec6f31') +
geom_point(size = 0.5) + scale_x_continuous(breaks = c(-180, -120, -60, 0, 60, 120, 180)) +
xlab(bquote('Angle subtended by targets on the agent (' *theta* ')')) + ylab(bquote('Neural interaction strength (' ~J[ij]~ ')')) +
ylim(-1.25,1.25) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_vline(xintercept = 0, lty = 'dashed') + theme_cus()
ggsave(paste0('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/tuning_curve_', curve, '.png'),
width = 8, height = 4, dpi = 300)
df_pie <- data.frame(
action = c('activate', 'inhibit'),
angle = c(zeros[zero_idx]/180, 1-zeros[zero_idx]/180)
)
ggplot(df_pie, aes(x="", y=angle, fill=action)) + geom_bar(width = 1, stat = 'identity', alpha = 0.8) +
coord_polar('y', start = 0) + scale_fill_manual(values=c("#ec6f31", "#ac9c93")) +
guides(fill = FALSE) + theme_blank
ggsave(paste0('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/tuning_illustration_', curve, '.png'),
width = 8, height = 4, dpi = 300)
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
library(RColorBrewer)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 18),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
theme_blank <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_blank()
)
# Parameter
curve <- 'nu'    # can take values cos, nu or hat
x <- seq(-pi, pi, 0.001)
ycos <- cos(x)
ynu <- cos(pi*(abs(x)/pi)^0.54)
yhat <- 1.8 * (1-0.25*x*x) * exp(-0.25*x*x) - 1
zeros <- c(90, 49.85, 59.7)
x <- x*180/pi
df <- as.data.frame(cbind(x,ycos, ynu, yhat))
if (curve == 'cos') {
zero_idx <- 1
df$y <- df$ycos
} else if (curve == 'nu') {
zero_idx <- 2
df$y <- df$ynu
} else {
zero_idx <- 3
df$y <- df$yhat
}
ggplot(df, aes(x = x, y = y)) + annotate('rect', xmin=-180, xmax=-zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=zeros[zero_idx], xmax=180, ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=-zeros[zero_idx], xmax=zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ec6f31') +
geom_point(size = 0.5) + scale_x_continuous(breaks = c(-180, -120, -60, 0, 60, 120, 180)) +
xlab(bquote('Angle subtended by targets on the agent (' *theta* ')')) + ylab(bquote('Neural interaction strength (' ~J[ij]~ ')')) +
ylim(-1.25,1.25) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_vline(xintercept = 0, lty = 'dashed') + theme_cus()
ggsave(paste0('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/tuning_curve_', curve, '.png'),
width = 8, height = 4, dpi = 300)
df_pie <- data.frame(
action = c('activate', 'inhibit'),
angle = c(zeros[zero_idx]/180, 1-zeros[zero_idx]/180)
)
ggplot(df_pie, aes(x="", y=angle, fill=action)) + geom_bar(width = 1, stat = 'identity', alpha = 0.8) +
coord_polar('y', start = 0) + scale_fill_manual(values=c("#ec6f31", "#ac9c93")) +
guides(fill = FALSE) + theme_blank
ggsave(paste0('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/tuning_illustration_', curve, '.png'),
width = 8, height = 4, dpi = 300)
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
library(RColorBrewer)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 18),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
theme_blank <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_blank()
)
# Parameter
curve <- 'cos'    # can take values cos, nu or hat
x <- seq(-pi, pi, 0.001)
ycos <- cos(x)
ynu <- cos(pi*(abs(x)/pi)^0.54)
yhat <- 1.8 * (1-0.25*x*x) * exp(-0.25*x*x) - 1
zeros <- c(90, 49.85, 59.7)
x <- x*180/pi
df <- as.data.frame(cbind(x,ycos, ynu, yhat))
if (curve == 'cos') {
zero_idx <- 1
df$y <- df$ycos
} else if (curve == 'nu') {
zero_idx <- 2
df$y <- df$ynu
} else {
zero_idx <- 3
df$y <- df$yhat
}
ggplot(df, aes(x = x, y = y)) + annotate('rect', xmin=-180, xmax=-zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=zeros[zero_idx], xmax=180, ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=-zeros[zero_idx], xmax=zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ec6f31') +
geom_point(size = 0.5) + scale_x_continuous(breaks = c(-180, -120, -60, 0, 60, 120, 180)) +
xlab(bquote('Angle subtended by targets on the agent (' *theta* ')')) + ylab(bquote('Neural interaction strength (' ~J[ij]~ ')')) +
ylim(-1.25,1.25) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_vline(xintercept = 0, lty = 'dashed') + theme_cus()
ggsave(paste0('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/tuning_curve_', curve, '.png'),
width = 8, height = 4, dpi = 300)
df_pie <- data.frame(
action = c('activate', 'inhibit'),
angle = c(zeros[zero_idx]/180, 1-zeros[zero_idx]/180)
)
ggplot(df_pie, aes(x="", y=angle, fill=action)) + geom_bar(width = 1, stat = 'identity', alpha = 0.8) +
coord_polar('y', start = 0) + scale_fill_manual(values=c("#ec6f31", "#ac9c93")) +
guides(fill = FALSE) + theme_blank
ggsave(paste0('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/tuning_illustration_', curve, '.png'),
width = 8, height = 4, dpi = 300)
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
library(RColorBrewer)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 6, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 6, margin = margin(0,15,0,0)),
axis.text = element_text(size = 7),
axis.ticks = element_line(colour = 'black', size = 0.1),
axis.ticks.length = unit(0.2, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.1),
axis.line.y = element_line(color="black", size = 0.1))
}
theme_blank <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.x = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_blank()
)
# Parameter
curve <- 'nu'    # can take values cos, nu or hat
x <- seq(-pi, pi, 0.001)
ycos <- cos(x)
ynu <- cos(pi*(abs(x)/pi)^0.54)
yhat <- 1.8 * (1-0.25*x*x) * exp(-0.25*x*x) - 1
zeros <- c(90, 45, 59.7)
x <- x*180/pi
df <- as.data.frame(cbind(x,ycos, ynu, yhat))
if (curve == 'cos') {
zero_idx <- 1
df$y <- df$ycos
} else if (curve == 'nu') {
zero_idx <- 2
df$y <- df$ynu
} else {
zero_idx <- 3
df$y <- df$yhat
}
ggplot(df, aes(x = x, y = y)) + annotate('rect', xmin=-180, xmax=-zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=zeros[zero_idx], xmax=180, ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ac9c93') +
annotate('rect', xmin=-zeros[zero_idx], xmax=zeros[zero_idx], ymin=-1.25,ymax=1.25, alpha=0.8, fill='#ec6f31') +
geom_point(size = 0.5) + scale_x_continuous(breaks = c(-180, -120, -60, 0, 60, 120, 180)) +
xlab(bquote('Angle subtended by targets on the agent (' *theta* ')')) + ylab(bquote('Neural interaction strength (' ~J[ij]~ ')')) +
ylim(-1.25,1.25) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_vline(xintercept = 0, lty = 'dashed') + theme_cus()
ggsave(paste0('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/tuning_curve_', curve, '.pdf'),
width = 4, height = 2, dpi = 600)
df_pie <- data.frame(
action = c('activate', 'inhibit'),
angle = c(zeros[zero_idx]/180, 1-zeros[zero_idx]/180)
)
ggplot(df_pie, aes(x="", y=angle, fill=action)) + geom_bar(width = 1, stat = 'identity', alpha = 0.8) +
coord_polar('y', start = 0) + scale_fill_manual(values=c("#ec6f31", "#ac9c93")) +
guides(fill = FALSE) + theme_blank
ggsave(paste0('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/tuning_illustration_', curve, '.png'),
width = 8, height = 4, dpi = 300)
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 12),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
## Set working directory
setwd("/Users/vivekhsridhar/Documents/Code/decision_geometry/decision_geometry/output")
dir <- getwd()
## Load data
df <- read.csv("geometry.csv")
ggplot(df, aes(x = x, y = y)) + geom_point(size=1) +theme_cus()
