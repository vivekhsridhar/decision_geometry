else {
data2 <- rbind(data2, tmp2)
}
}
}
ggplot(data1, aes(x = i, y = p_target)) + geom_path(colour = '#008040', size = 2, lineend = 'round') +
geom_path(data = data2, aes(x = i, y = p_target), size = 2, colour = '#004080', lineend = 'round') +
geom_hline(aes(yintercept = 0.31), linetype = 'dashed') + geom_hline(aes(yintercept = 0.33)) +
annotate("rect", xmin = 0.12, xmax = 0.25, ymin = 0, ymax = 0.7, alpha = 0.2, fill = "grey69") +
xlab("Neuronal selectivity") + ylab("P (reaching the right target)") + theme_cus()
## Load data
df <- read.csv("cue_reached_susceptibility_angle.csv")
head(df)
## Parameters
n1 <- unique(df$n1)
n2 <- unique(df$n2)
t <- n1 + n2
data <- as.data.frame(melt(tapply(df$consensus, df$angle, mean)))
names(data) <- c('angle', 'consensus')
data$consensus <- (data$consensus+n2)/t
ggplot(data, aes(x = angle, y = consensus)) + geom_path(colour = 'black', size = 2, lineend = 'round') +
geom_vline(aes(xintercept = 81.05), linetype = 'dashed') + xlab("Angle") +
ylab("") + ylim(0.5,0.8) + theme_cus()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
ggplot(data, aes(x = angle, y = consensus)) + geom_line() + theme_cus()
ggplot(data2, aes(x = angle, y = consensus)) + geom_line() + theme_cus()
data
ggplot(data, aes(x = angle, y = consensus, colour = tuning)) + geom_line() + theme_cus()
ggplot(data, aes(x = angle, y = consensus, colour = tuning)) + geom_path() + theme_cus()
ggplot(data, aes(x = angle, y = consensus, colour = tuning)) + geom_point() +
scale_colour_viridis_c() + theme_cus()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
ggplot(data, aes(x = angle, y = consensus, colour = tuning)) + geom_point() +
scale_colour_viridis_c() + theme_cus()
ggplot(data, aes(x = angle, y = consensus, colour = tuning)) + geom_line() +
scale_colour_viridis_c() + theme_cus()
ggplot(data, aes(x = angle, y = consensus, colour = tuning)) + geom_path() +
scale_colour_viridis_c() + theme_cus()
ggplot(data, aes(x = tuning, y = consensus, colour = angle)) + geom_path() +
scale_colour_viridis_c() + theme_cus()
ggplot(data, aes(x = tuning, y = consensus, colour = angle)) + geom_line() +
scale_colour_viridis_c() + theme_cus()
ggplot(data, aes(x = tuning, y = consensus, colour = angle)) + geom_point() +
scale_colour_viridis_c() + theme_cus()
data2 <- data[which(data$tuning == 0.25),]
ggplot(data2, aes(x = angle, y = consensus)) + geom_line() + theme_cus()
data2 <- data[which(data$tuning == 0.1),]
ggplot(data2, aes(x = angle, y = consensus)) + geom_line() + theme_cus()
data2 <- data[which(data$tuning == 0.2),]
ggplot(data2, aes(x = angle, y = consensus)) + geom_line() + theme_cus()
data2 <- data[which(data$tuning == 0.3),]
ggplot(data2, aes(x = angle, y = consensus)) + geom_line() + theme_cus()
data2 <- data[which(data$tuning == 0.5),]
ggplot(data2, aes(x = angle, y = consensus)) + geom_line() + theme_cus()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
ggplot(data, aes(x = angle, y = tuning, fill = consensus)) + geom_tile() +
scale_fill_viridis_c() + theme_cus()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
ggplot(data, aes(x = angle, y = tuning, fill = consensus)) + geom_tile() +
scale_fill_viridis_c() + theme_cus()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
ggplot(data, aes(x = angle, y = tuning, fill = consensus)) + geom_tile() +
scale_fill_viridis_c() + theme_cus()
ggplot(data, aes(x = angle, y = consensus)) + geom_line() + theme_cus()
ggplot(data, aes(x = angle, y = consensus)) + geom_point() + theme_cus()
ggplot(data, aes(x = angle, y = consensus)) + geom_path() + theme_cus()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
ggplot(data, aes(x = angle, y = consensus)) + geom_line() + theme_cus()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
ggplot(data, aes(x = angle, y = consensus)) + geom_line() + theme_cus()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
ggplot(data, aes(x = angle, y = consensus)) + geom_line() + theme_cus()
## Parameters
n1 <- unique(df$n1)
n2 <- unique(df$n2)
t <- n1 + n2
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
data$consensus <- (data$consensus+n2)/t
ggplot(data, aes(x = angle, y = tuning, fill = consensus)) + geom_tile() +
scale_fill_viridis_c() + theme_cus()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
## Parameters
n1 <- unique(df$n1)
n2 <- unique(df$n2)
t <- n1 + n2
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
data$consensus <- (data$consensus+n2)/t
ggplot(data, aes(x = angle, y = tuning, fill = consensus)) + geom_tile() +
scale_fill_viridis_c() + theme_cus()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
## Parameters
n1 <- unique(df$n1)
n2 <- unique(df$n2)
t <- n1 + n2
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
ggplot(data, aes(x = angle, y = tuning, fill = consensus)) + geom_tile() +
scale_fill_viridis_c() + theme_cus()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
## Parameters
n1 <- unique(df$n1)
n2 <- unique(df$n2)
t <- n1 + n2
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
data$consensus <- (data$consensus+n2)/t
ggplot(data, aes(x = angle, y = tuning, fill = consensus)) + geom_tile() +
scale_fill_viridis_c() + theme_cus()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
## Parameters
n1 <- unique(df$n1)
n2 <- unique(df$n2)
t <- n1 + n2
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
ggplot(data, aes(x = angle, y = tuning, fill = consensus)) + geom_tile() +
scale_fill_viridis_c() + theme_cus()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
## Parameters
n1 <- unique(df$n1)
n2 <- unique(df$n2)
t <- n1 + n2
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
data$consensus <- (data$consensus+n2)/t
ggplot(data, aes(x = angle, y = tuning, fill = consensus)) + geom_tile() +
scale_fill_viridis_c() + theme_cus()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
## Parameters
n1 <- unique(df$n1)
n2 <- unique(df$n2)
t <- n1 + n2
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
data$consensus <- (data$consensus+n2)/t
ggplot(data, aes(x = angle, y = tuning, fill = consensus)) + geom_tile() +
scale_fill_viridis_c() + theme_cus()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
## Parameters
n1 <- unique(df$n1)
n2 <- unique(df$n2)
t <- n1 + n2
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'angle', 'consensus')
data$consensus <- (data$consensus+n2)/t
ggplot(data, aes(x = angle, y = tuning, fill = consensus)) + geom_tile() +
scale_fill_viridis_c() + theme_cus()
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 12),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
## Set working directory
setwd("/Users/vivekhsridhar/Documents/Code/decision_geometry/decision_geometry/output/")
dir <- getwd()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
## Parameters
n1 <- unique(df$n1)
n2 <- unique(df$n2)
t <- n1 + n2
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'Angle', 'Consensus')
data$consensus <- (data$consensus+n2)/t
ggplot(data, aes(x = angle, y = tuning, fill = Consensus)) + geom_tile() +
scale_fill_viridis_c() + ylab("Neural tuning") + theme_cus()
ggsave('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/McDonnell\ proposal/susceptibility_matrix.png',
width = 5, height = 5, dpi = 300)
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 12),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
## Set working directory
setwd("/Users/vivekhsridhar/Documents/Code/decision_geometry/decision_geometry/output/")
dir <- getwd()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
## Parameters
n1 <- unique(df$n1)
n2 <- unique(df$n2)
t <- n1 + n2
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'Angle', 'Consensus')
data$consensus <- (data$consensus+n2)/t
ggplot(data, aes(x = Angle, y = tuning, fill = Consensus)) + geom_tile() +
scale_fill_viridis_c() + ylab("Neural tuning") + theme_cus()
ggsave('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/McDonnell\ proposal/susceptibility_matrix.png',
width = 5, height = 5, dpi = 300)
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 12),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
## Set working directory
setwd("/Users/vivekhsridhar/Documents/Code/decision_geometry/decision_geometry/output/")
dir <- getwd()
## Load data
df <- read.csv("cue_reached.csv")
head(df)
## Parameters
n1 <- unique(df$n1)
n2 <- unique(df$n2)
t <- n1 + n2
data <- as.data.frame(melt(tapply(df$consensus, list(df$tuning, df$angle), mean)))
names(data) <- c('tuning', 'Angle', 'Susceptibility')
data$consensus <- (data$consensus+n2)/t
ggplot(data, aes(x = Angle, y = tuning, fill = Susceptibility)) + geom_tile() +
scale_fill_viridis_c() + ylab("Neural tuning") + theme_cus()
ggsave('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/McDonnell\ proposal/susceptibility_matrix.png',
width = 5, height = 5, dpi = 300)
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 12),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
## Set working directory
setwd("/Users/vivekhsridhar/Documents/Code/decision_geometry/decision_geometry/output/")
dir <- getwd()
## Load data
df1 <- read.csv("cue_reached_bias.csv")
df2 <- read.csv("cue_reached_no_bias.csv")
## Parameters
N <- 3
if (N == 2) {
for (i in unique(df1$hat_width)) {
tmp = df1[which(df1$hat_width == i),]
p_target <- length(which(tmp$target_reached == 0)) / dim(tmp)[1]
path_length <- median(tmp$path_length)
tmp2 <- as.data.frame(cbind(i, p_target, path_length))
if (i == unique(df1$hat_width)[1]) {
data1 <- tmp2
}
else {
data1 <- rbind(data1, tmp2)
}
}
} else if (N == 3) {
for (i in unique(df1$hat_width)) {
tmp = df1[which(df1$hat_width == i),]
p_target <- length(which(tmp$target_reached == 0)) / dim(tmp)[1]
path_length <- median(tmp$path_length)
tmp2 <- as.data.frame(cbind(i, p_target, path_length))
if (i == unique(df1$hat_width)[1]) {
data1 <- tmp2
}
else {
data1 <- rbind(data1, tmp2)
}
}
}
if (N == 2) {
for (i in unique(df2$hat_width)) {
tmp = df2[which(df2$hat_width == i),]
p_target <- length(which(tmp$target_reached == 0)) / dim(tmp)[1]
path_length <- median(tmp$path_length)
tmp2 <- as.data.frame(cbind(i, p_target, path_length))
if (i == unique(df2$hat_width)[1]) {
data2 <- tmp2
}
else {
data2 <- rbind(data2, tmp2)
}
}
} else if (N == 3) {
for (i in unique(df2$hat_width)) {
tmp = df2[which(df2$hat_width == i),]
p_target <- length(which(tmp$target_reached == 0)) / dim(tmp)[1]
path_length <- median(tmp$path_length)
tmp2 <- as.data.frame(cbind(i, p_target, path_length))
if (i == unique(df2$hat_width)[1]) {
data2 <- tmp2
}
else {
data2 <- rbind(data2, tmp2)
}
}
}
ggplot(data1, aes(x = i, y = p_target)) + geom_path(colour = '#008040', size = 2, lineend = 'round') +
geom_path(data = data2, aes(x = i, y = p_target), size = 2, colour = '#004080', lineend = 'round') +
geom_hline(aes(yintercept = 0.31), linetype = 'dashed') + geom_hline(aes(yintercept = 0.33)) +
annotate("rect", xmin = 0.12, xmax = 0.25, ymin = 0, ymax = 0.7, alpha = 0.2, fill = "grey69") +
xlab("Neuronal selectivity") + ylab("P (reaching the right target)") + theme_cus()
## Load data
df <- read.csv("cue_reached_susceptibility_angle.csv")
head(df)
## Parameters
n1 <- unique(df$n1)
n2 <- unique(df$n2)
t <- n1 + n2
data <- as.data.frame(melt(tapply(df$consensus, df$angle, mean)))
names(data) <- c('angle', 'consensus')
data$consensus <- (data$consensus+n2)/t
ggplot(data, aes(x = angle, y = consensus)) + geom_path(colour = 'black', size = 2, lineend = 'round') +
geom_vline(aes(xintercept = 81.05), linetype = 'dashed') + xlab("Angle") +
ylab("Susceptibility") + ylim(0.5,0.8) + theme_cus()
ggsave('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/McDonnell\ proposal/susceptibility_angle.png',
width = 5, height = 5, dpi = 300)
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 12),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
## Set working directory
setwd("/Users/vivekhsridhar/Documents/Code/decision_geometry/decision_geometry/output/")
dir <- getwd()
## Load data
df1 <- read.csv("cue_reached_bias.csv")
df2 <- read.csv("cue_reached_no_bias.csv")
## Parameters
N <- 3
if (N == 2) {
for (i in unique(df1$hat_width)) {
tmp = df1[which(df1$hat_width == i),]
p_target <- length(which(tmp$target_reached == 0)) / dim(tmp)[1]
path_length <- median(tmp$path_length)
tmp2 <- as.data.frame(cbind(i, p_target, path_length))
if (i == unique(df1$hat_width)[1]) {
data1 <- tmp2
}
else {
data1 <- rbind(data1, tmp2)
}
}
} else if (N == 3) {
for (i in unique(df1$hat_width)) {
tmp = df1[which(df1$hat_width == i),]
p_target <- length(which(tmp$target_reached == 0)) / dim(tmp)[1]
path_length <- median(tmp$path_length)
tmp2 <- as.data.frame(cbind(i, p_target, path_length))
if (i == unique(df1$hat_width)[1]) {
data1 <- tmp2
}
else {
data1 <- rbind(data1, tmp2)
}
}
}
if (N == 2) {
for (i in unique(df2$hat_width)) {
tmp = df2[which(df2$hat_width == i),]
p_target <- length(which(tmp$target_reached == 0)) / dim(tmp)[1]
path_length <- median(tmp$path_length)
tmp2 <- as.data.frame(cbind(i, p_target, path_length))
if (i == unique(df2$hat_width)[1]) {
data2 <- tmp2
}
else {
data2 <- rbind(data2, tmp2)
}
}
} else if (N == 3) {
for (i in unique(df2$hat_width)) {
tmp = df2[which(df2$hat_width == i),]
p_target <- length(which(tmp$target_reached == 0)) / dim(tmp)[1]
path_length <- median(tmp$path_length)
tmp2 <- as.data.frame(cbind(i, p_target, path_length))
if (i == unique(df2$hat_width)[1]) {
data2 <- tmp2
}
else {
data2 <- rbind(data2, tmp2)
}
}
}
ggplot(data1, aes(x = i, y = p_target)) + geom_path(colour = '#008040', size = 2, lineend = 'round') +
geom_path(data = data2, aes(x = i, y = p_target), size = 2, colour = '#004080', lineend = 'round') +
geom_hline(aes(yintercept = 0.31), linetype = 'dashed') + geom_hline(aes(yintercept = 0.33)) +
annotate("rect", xmin = 0.12, xmax = 0.25, ymin = 0, ymax = 0.7, alpha = 0.2, fill = "grey69") +
xlab("Neural tuning") + ylab("P (reaching the right target)") + theme_cus()
ggsave('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/McDonnell\ proposal/tuning_dependency.png',
width = 5, height = 5, dpi = 300)
## Load data
df <- read.csv("cue_reached_susceptibility_angle.csv")
head(df)
## Parameters
n1 <- unique(df$n1)
n2 <- unique(df$n2)
t <- n1 + n2
data <- as.data.frame(melt(tapply(df$consensus, df$angle, mean)))
names(data) <- c('angle', 'consensus')
data$consensus <- (data$consensus+n2)/t
ggplot(data, aes(x = angle, y = consensus)) + geom_path(colour = 'black', size = 2, lineend = 'round') +
geom_vline(aes(xintercept = 81.05), linetype = 'dashed') + xlab("Angle") +
ylab("Susceptibility") + ylim(0.5,0.8) + theme_cus()
ggsave('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/McDonnell\ proposal/susceptibility_angle.png',
width = 5, height = 5, dpi = 300)
