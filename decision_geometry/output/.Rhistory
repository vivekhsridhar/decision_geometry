df <- read.csv('/Users/vivekhsridhar/Documents/Code/decision_geometry/decision_geometry/output/geometry.csv')
plot(df$x, df$y)
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 12),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
## Set working directory
setwd("/Users/vivekhsridhar/Documents/Code/decision_geometry/decision_geometry/output")
dir <- getwd()
## Set parameters
N <- 4
## Derive variable values
bifurcation_angle <- acos(2/N - 1)
post1_x <- 500*cos(pi/6); post1_y <- 500*sin(pi/6)
post2_x <- 500*cos(-pi/6); post2_y <- 500*sin(-pi/6)
bifurcation_x <- post1_y/tan(-bifurcation_angle/2)+post1_x; bifurcation_y <- 0
c1_x <- (post1_x + bifurcation_x)/2; c1_y <- (post1_y + bifurcation_y)/2
c2_x <- (post2_x + bifurcation_x)/2; c2_y <- (post2_y + bifurcation_y)/2
m1 <- (bifurcation_y-post1_y)/(bifurcation_x-post1_x)
m2 <- (bifurcation_y-post2_y)/(bifurcation_x-post2_x)
x0 <- c1_x + m1*c1_y - m1*(c1_x - c2_x + m1*c1_y - m2*c2_y)/(m1 - m2)
y0 <- (c1_x - c2_x + m1*c1_y - m2*c2_y)/(m1 - m2)
## Load data
df <- read.csv("geometry.csv")
x <- as.data.frame(melt(tapply(df$x, df$sim_id, mean)))
y <- as.data.frame(melt(tapply(df$y-500, df$sim_id, mean)))
dir_x <- as.data.frame(melt(tapply(df$dir_x, df$sim_id, mean)))
dir_y <- as.data.frame(melt(tapply(df$dir_y, df$sim_id, mean)))
names(x) <- c('sim_id', 'x')
names(y) <- c('sim_id', 'y')
names(dir_x) <- c('sim_id', 'dir_x')
names(dir_y) <- c('sim_id', 'dir_y')
pos <- merge(x,y)
dir <- merge(dir_x,dir_y)
df <- merge(pos,dir)
df$`vector length` <- sqrt(df$dir_x^2+df$dir_y^2)
head(df)
ggplot(df, aes(x = x, y = y)) +
geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0) +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty='dashed') +
xlim(0,435) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_cus()
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 12),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
## Set working directory
setwd("/Users/vivekhsridhar/Documents/Code/decision_geometry/decision_geometry/output")
dir <- getwd()
## Set parameters
N <- 4
## Derive variable values
bifurcation_angle <- acos(2/N - 1)
post1_x <- 500*cos(pi/6); post1_y <- 500*sin(pi/6)
post2_x <- 500*cos(-pi/6); post2_y <- 500*sin(-pi/6)
bifurcation_x <- post1_y/tan(-bifurcation_angle/2)+post1_x; bifurcation_y <- 0
c1_x <- (post1_x + bifurcation_x)/2; c1_y <- (post1_y + bifurcation_y)/2
c2_x <- (post2_x + bifurcation_x)/2; c2_y <- (post2_y + bifurcation_y)/2
m1 <- (bifurcation_y-post1_y)/(bifurcation_x-post1_x)
m2 <- (bifurcation_y-post2_y)/(bifurcation_x-post2_x)
x0 <- c1_x + m1*c1_y - m1*(c1_x - c2_x + m1*c1_y - m2*c2_y)/(m1 - m2)
y0 <- (c1_x - c2_x + m1*c1_y - m2*c2_y)/(m1 - m2)
## Load data
df <- read.csv("geometry.csv")
x <- as.data.frame(melt(tapply(df$x, df$sim_id, mean)))
y <- as.data.frame(melt(tapply(df$y-500, df$sim_id, mean)))
dir_x <- as.data.frame(melt(tapply(df$dir_x, df$sim_id, mean)))
dir_y <- as.data.frame(melt(tapply(df$dir_y, df$sim_id, mean)))
names(x) <- c('sim_id', 'x')
names(y) <- c('sim_id', 'y')
names(dir_x) <- c('sim_id', 'dir_x')
names(dir_y) <- c('sim_id', 'dir_y')
pos <- merge(x,y)
dir <- merge(dir_x,dir_y)
df <- merge(pos,dir)
df$`vector length` <- sqrt(df$dir_x^2+df$dir_y^2)
head(df)
ggplot(df, aes(x = x, y = y)) +
geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0) +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty='dashed') +
xlim(0,435) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_cus()
ggplot(df, aes(x = x, y = y)) +
geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty='dotted') +
xlim(0,435) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_cus()
ggplot(df, aes(x = x, y = y)) +
geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty='dotted') +
xlim(0,435) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_cus() + guides(colour = FALSE)
ggplot(df, aes(x = x, y = y)) +
geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty='dotted') +
xlim(0,435) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_cus() + guides(fill = FALSE)
ggplot(df, aes(x = x, y = y)) +
#geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty='dotted') +
xlim(0,435) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_cus() + guides(fill = FALSE)
ggplot(df, aes(x = x, y = y)) +
#geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty='dotted') +
xlim(0,435) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_void() + guides(fill = FALSE)
ggplot(df, aes(x = x, y = y)) +
#geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty='0') +
xlim(0,435) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_void() + guides(fill = FALSE)
ggplot(df, aes(x = x, y = y)) +
#geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty=0) +
xlim(0,435) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_void() + guides(fill = FALSE)
ggplot(df, aes(x = x, y = y)) +
#geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty=1) +
xlim(0,435) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_void() + guides(fill = FALSE)
ggplot(df, aes(x = x, y = y)) +
#geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty=2) +
xlim(0,435) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_void() + guides(fill = FALSE)
ggplot(df, aes(x = x, y = y)) +
#geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty=3) +
xlim(0,435) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_void() + guides(fill = FALSE)
ggplot(df, aes(x = x, y = y)) +
#geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty=4) +
xlim(0,435) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_cus() + guides(fill = FALSE)
ggplot(df, aes(x = x, y = y)) +
geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty='dotted') +
xlim(0,435) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_cus() + guides(fill = FALSE)
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 12),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
## Set working directory
setwd("/Users/vivekhsridhar/Documents/Code/decision_geometry/decision_geometry/output")
dir <- getwd()
## Set parameters
N <- 4
## Derive variable values
bifurcation_angle <- acos(2/N - 1)
post1_x <- 500*cos(pi/6); post1_y <- 500*sin(pi/6)
post2_x <- 500*cos(-pi/6); post2_y <- 500*sin(-pi/6)
bifurcation_x <- post1_y/tan(-bifurcation_angle/2)+post1_x; bifurcation_y <- 0
c1_x <- (post1_x + bifurcation_x)/2; c1_y <- (post1_y + bifurcation_y)/2
c2_x <- (post2_x + bifurcation_x)/2; c2_y <- (post2_y + bifurcation_y)/2
m1 <- (bifurcation_y-post1_y)/(bifurcation_x-post1_x)
m2 <- (bifurcation_y-post2_y)/(bifurcation_x-post2_x)
x0 <- c1_x + m1*c1_y - m1*(c1_x - c2_x + m1*c1_y - m2*c2_y)/(m1 - m2)
y0 <- (c1_x - c2_x + m1*c1_y - m2*c2_y)/(m1 - m2)
## Load data
df <- read.csv("geometry.csv")
df$x <- df$x/100
df$y <- df$y/100
x <- as.data.frame(melt(tapply(df$x, df$sim_id, mean)))
y <- as.data.frame(melt(tapply(df$y-5, df$sim_id, mean)))
dir_x <- as.data.frame(melt(tapply(df$dir_x, df$sim_id, mean)))
dir_y <- as.data.frame(melt(tapply(df$dir_y, df$sim_id, mean)))
names(x) <- c('sim_id', 'x')
names(y) <- c('sim_id', 'y')
names(dir_x) <- c('sim_id', 'dir_x')
names(dir_y) <- c('sim_id', 'dir_y')
pos <- merge(x,y)
dir <- merge(dir_x,dir_y)
df <- merge(pos,dir)
df$`vector length` <- sqrt(df$dir_x^2+df$dir_y^2)
head(df)
ggplot(df, aes(x = x, y = y)) +
geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty='dotted') +
xlim(0,435) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_cus() + guides(fill = FALSE)
rm(list = ls())
## Load packages
library(reshape2)
library(ggplot2)
library(ggforce)
theme_cus <- function(base_size = 12, base_family = "Helvetica"){
theme_classic(base_size = base_size, base_family = base_family) +
theme(axis.title.x = element_text(size = 15, margin = margin(15,0,0,0)),
axis.title.y = element_text(size = 15, margin = margin(0,15,0,0)),
axis.text = element_text(size = 12),
axis.ticks.length = unit(0.3, "lines"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position="right",
legend.background = element_rect(colour = "black"),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
axis.line.x = element_line(color="black", size = 0.5),
axis.line.y = element_line(color="black", size = 0.5))
}
## Set working directory
setwd("/Users/vivekhsridhar/Documents/Code/decision_geometry/decision_geometry/output")
dir <- getwd()
## Set parameters
N <- 4
## Derive variable values
bifurcation_angle <- acos(2/N - 1)
post1_x <- 5*cos(pi/6); post1_y <- 5*sin(pi/6)
post2_x <- 5*cos(-pi/6); post2_y <- 5*sin(-pi/6)
bifurcation_x <- post1_y/tan(-bifurcation_angle/2)+post1_x; bifurcation_y <- 0
c1_x <- (post1_x + bifurcation_x)/2; c1_y <- (post1_y + bifurcation_y)/2
c2_x <- (post2_x + bifurcation_x)/2; c2_y <- (post2_y + bifurcation_y)/2
m1 <- (bifurcation_y-post1_y)/(bifurcation_x-post1_x)
m2 <- (bifurcation_y-post2_y)/(bifurcation_x-post2_x)
x0 <- c1_x + m1*c1_y - m1*(c1_x - c2_x + m1*c1_y - m2*c2_y)/(m1 - m2)
y0 <- (c1_x - c2_x + m1*c1_y - m2*c2_y)/(m1 - m2)
## Load data
df <- read.csv("geometry.csv")
df$x <- df$x/100
df$y <- df$y/100
x <- as.data.frame(melt(tapply(df$x, df$sim_id, mean)))
y <- as.data.frame(melt(tapply(df$y-5, df$sim_id, mean)))
dir_x <- as.data.frame(melt(tapply(df$dir_x, df$sim_id, mean)))
dir_y <- as.data.frame(melt(tapply(df$dir_y, df$sim_id, mean)))
names(x) <- c('sim_id', 'x')
names(y) <- c('sim_id', 'y')
names(dir_x) <- c('sim_id', 'dir_x')
names(dir_y) <- c('sim_id', 'dir_y')
pos <- merge(x,y)
dir <- merge(dir_x,dir_y)
df <- merge(pos,dir)
df$`vector length` <- sqrt(df$dir_x^2+df$dir_y^2)
head(df)
ggplot(df, aes(x = x, y = y)) +
geom_raster(aes(fill = `vector length`)) + geom_hline(yintercept = 0, lty = 'dashed') +
geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty='dotted') +
xlim(0,4.35) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_cus() + guides(fill = FALSE)
ggplot(df, aes(x = x, y = y)) +
geom_raster(aes(fill = `vector length`)) + #geom_hline(yintercept = 0, lty = 'dashed') +
#geom_ellipse(aes(x0 = x0, y0 = y0, a = x0-bifurcation_x, b = x0-bifurcation_x, angle = 0), lty='dotted') +
xlim(0,4.35) + ylim(post2_y,post1_y) + scale_fill_viridis_c() + theme_cus() + guides(fill = FALSE)
ggsave('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/McDonnell\ proposal/geometry.png',
scale = 4.33/5, dpi = 300)
ggsave('/Users/vivekhsridhar/Documents/Work/Ideas/Decision\ Geometry/Figures/McDonnell\ proposal/geometry.png',
width = 4.33, height = 5, dpi = 300)
